{
  "Routes": [
    {
      "UpstreamPathTemplate": "/auth/login",
      "UpstreamHttpMethod": [ "POST" ],

      "DownstreamPathTemplate": "/api/auth/login",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "identity-api",
          "Port": 8080
        }
      ],

      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      }
    },
    {
      "UpstreamPathTemplate": "/auth/register",
      "UpstreamHttpMethod": [ "POST" ],

      "DownstreamPathTemplate": "/api/auth/register",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "identity-api",
          "Port": 8080
        }
      ],
      
      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      }
    },
    {
      "UpstreamPathTemplate": "/auth/_health",
      "UpstreamHttpMethod": [ "GET" ],

      "DownstreamPathTemplate": "/_health",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "identity-api",
          "Port": 8080
        }
      ],

      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      }
    },
    {
      "UpstreamPathTemplate": "/products",
      "UpstreamHttpMethod": [ "GET", "POST" ],

      "DownstreamPathTemplate": "/api/products",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "products-api",
          "Port": 8082
        }
      ],

      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 1000,
        "TimeoutValue": 4500
      }
    },
    {
      "UpstreamPathTemplate": "/products/{id:guid}",
      "UpstreamHttpMethod": [ "GET", "DELETE", "PUT" ],

      "DownstreamPathTemplate": "/api/products/{id:guid}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "products-api",
          "Port": 8082
        }
      ],

      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 1000,
        "TimeoutValue": 3500
      }
    },
    {
      "UpstreamPathTemplate": "/products/_health",
      "UpstreamHttpMethod": [ "GET" ],

      "DownstreamPathTemplate": "/_health",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "products-api",
          "Port": 8082
        }
      ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      }
    },
    {
      "UpstreamPathTemplate": "/buyers",
      "UpstreamHttpMethod": [ "GET", "POST" ],

      "DownstreamPathTemplate": "/api/buyers",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "ordering-api",
          "Port": 8081
        }
      ],

      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 1000,
        "TimeoutValue": 3500
      }
    },
    {
      "UpstreamPathTemplate": "/buyers/{id:guid}",
      "UpstreamHttpMethod": [ "GET", "DELETE" ,"PUT" ],

      "DownstreamPathTemplate": "/api/buyers/{id:guid}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "ordering-api",
          "Port": 8081
        }
      ],

      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 1500,
        "TimeoutValue": 3500
      }
    },
    {
      "UpstreamPathTemplate": "/buyers/{email}",
      "UpstreamHttpMethod": [ "GET" ],

      "DownstreamPathTemplate": "/api/buyers/{email}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "ordering-api",
          "Port": 8081
        }
      ],
      
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 1000,
        "TimeoutValue": 3500
      }
    },
    {
      "UpstreamPathTemplate": "/buyers/{buyerId:guid}/orders",
      "UpstreamHttpMethod": [ "GET" ,"POST" ],

      "DownstreamPathTemplate": "/api/buyers/{buyerId:guid}/orders",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "ordering-api",
          "Port": 8081
        }
      ],
      
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 1000,
        "TimeoutValue": 3500
      },
      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      }
    },
    {
      "UpstreamPathTemplate": "/buyers/{buyerId:guid}/orders/{id:guid}",
      "UpstreamHttpMethod": [ "GET" ,"PUT" ],

      "DownstreamPathTemplate": "/api/buyers/{buyerId:guid}/orders/{id:guid}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "ordering-api",
          "Port": 8081
        }
      ],

      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 1000,
        "TimeoutValue": 3500
      },
      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      }
    },
    {
      "UpstreamPathTemplate": "/ordering/_health",
      "UpstreamHttpMethod": [ "GET" ],
      
      "DownstreamPathTemplate": "/_health",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "ordering-api",
          "Port": 8081
        }
      ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      }
    }
  ],
  "GlobalConfiguration": {
    "ServiceDiscoveryProvider": {
      "Namespace": "default",
      "Type": "KubernetesServiceDiscoveryProvider",
      "Host": "https://kubernetes.default.svc"
    }
  }
}